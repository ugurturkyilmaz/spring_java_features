plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version "4.3.0.3225"  // SonarQube plugin versiyonu
	id 'pmd'

}

pmd {
	// Kullanmak istediğiniz PMD sürümünü belirtin (örneğin, 6.49.0)
	toolVersion = "7.0.0"

	// Varsayılan kural setlerini kullanmak istemiyorsanız boş bırakın
	//ruleSets = []

	// Kendi özel kural setinizi belirtin (örneğin, proje kök dizininde config/pmd/ruleset.xml)
	//ruleSetFiles = files("$rootDir/config/pmd/ruleset.xml")

	ruleSets = []  // Varsayılan kural setlerini devre dışı bırakıyoruz
	ruleSetFiles = files("$rootDir/config/pmd/ruleset.xml")
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	//implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.36'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'
}
//sl4j loglamasını kapatmak icin, default o oluyor
configurations {
	configureEach {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property "sonar.projectKey", "spring_java_features"
		property "sonar.organization", "ugurturkyilmaz"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.login", "138c631f43c42e45c01b32ede35c23b385ecdd72"
	}
}